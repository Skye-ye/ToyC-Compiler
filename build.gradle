plugins {
    id 'java'
    id 'antlr'
    id 'application'
}

application {
    mainClass = 'toyc.Compiler'
}

repositories {
    mavenCentral()
}

dependencies {
    antlr("org.antlr:antlr4:4.13.2")
    implementation("info.picocli:picocli:4.7.7")
    implementation("org.apache.logging.log4j:log4j-api:2.24.3")
    implementation("org.apache.logging.log4j:log4j-core:2.24.3")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.0")
    implementation("org.antlr:antlr4-runtime:4.13.2")
    implementation("org.slf4j:slf4j-nop:2.0.13")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation('org.junit.jupiter:junit-jupiter')
}

generateGrammarSource {
    outputDirectory = layout.buildDirectory.dir('generated-src/antlr/main/toyc').get().asFile
    arguments = [
            '-visitor',
            '-no-listener',
            '-long-messages',
            '-package', 'toyc',
            '-Xexact-output-dir',
    ]
}

run {
    // For OJ submission, accept -opt parameter but ignore it
    if (project.hasProperty('opt')) {
        // -opt parameter is provided but we ignore it
        println "Received -opt parameter: ${project.property('opt')} (ignored for OJ submission)"
    }
    // For OJ submission, no arguments needed
    args = []
    // Ensure stdin is available
    standardInput = System.in
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava {
    options.compilerArgs += [
            '-Xlint:unchecked',
            '-Xlint:deprecation',
            '-Xlint:rawtypes'
    ]
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.compilerArgs += [
            '-Xlint:unchecked',
            '-Xlint:deprecation'
    ]
    options.encoding = 'UTF-8'
}